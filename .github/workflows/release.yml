name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Create Release ZIP
      run: |
        # Create a temporary directory for the plugin
        mkdir -p /tmp/plugin-build/abandoned-cart
        
        # Copy plugin files (exclude development files)
        rsync -av \
          --exclude='.git*' \
          --exclude='.github' \
          --exclude='*.sh' \
          --exclude='UPDATE-SETUP.md' \
          --exclude='wordpress-plugin' \
          ./ /tmp/plugin-build/abandoned-cart/
        
        # Create ZIP file
        cd /tmp/plugin-build
        zip -r $GITHUB_WORKSPACE/abandoned-cart-${{ steps.get_version.outputs.VERSION }}.zip .
        
        # Return to workspace
        cd $GITHUB_WORKSPACE
        
        # Verify ZIP was created
        ls -la abandoned-cart-${{ steps.get_version.outputs.VERSION }}.zip
        
        # Show ZIP contents for debugging
        echo "ZIP contents:"
        unzip -l abandoned-cart-${{ steps.get_version.outputs.VERSION }}.zip
        
    - name: Extract changelog from tag message
      id: changelog
      run: |
        # Get tag annotation or commit message
        TAG_NAME=${GITHUB_REF#refs/tags/}
        CHANGELOG=$(git tag -l --format='%(contents)' "$TAG_NAME" 2>/dev/null || echo "")
        if [ -z "$CHANGELOG" ] || [ "$CHANGELOG" = " " ]; then
          CHANGELOG="Release ${{ steps.get_version.outputs.VERSION }}"
        fi
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Debug before release
      run: |
        echo "Version: ${{ steps.get_version.outputs.VERSION }}"
        echo "Tag: ${{ github.ref }}"
        echo "Files to upload:"
        ls -la *.zip
        
    - name: Create GitHub Release with CLI
      run: |
        # Create release notes
        cat > release_notes.md << 'EOF'
        ## What's Changed
        
        ${{ steps.changelog.outputs.CHANGELOG }}
        
        ## Installation
        
        1. Download the ZIP file below
        2. Go to WordPress Admin → Plugins → Add New → Upload Plugin
        3. Upload the ZIP file and activate
        
        ## Automatic Updates
        
        If you already have the plugin installed, you'll receive an update notification in your WordPress admin within 12 hours.
        
        ## Requirements
        
        - WordPress 5.0+
        - WooCommerce 3.0+
        - PHP 7.4+
        - HPOS Compatible
        EOF
        
        # Create the release using GitHub CLI
        gh release create v${{ steps.get_version.outputs.VERSION }} \
          --title "WooCommerce Abandoned Cart Tracker v${{ steps.get_version.outputs.VERSION }}" \
          --notes-file release_notes.md \
          abandoned-cart-${{ steps.get_version.outputs.VERSION }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
